{"ast":null,"code":"var _jsxFileName = \"/Users/gino.kalyun/Desktop/Repos/Go-Quiz/ReactQuiz/my-app/src/Quiz/Game.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport './QuizButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerOptions = ({\n  setCorrectAnswers,\n  setCurrentQuestion,\n  currentQuestion,\n  setUserAnswers,\n  userAnswers,\n  setStartGame,\n  setShowResults,\n  answers,\n  correctAnswer,\n  isLast\n}) => {\n  _s();\n  const [optionClicked, setOptionClicked] = useState(false);\n  const handleOptionClick = selectedOption => {\n    setUserAnswers([...userAnswers, {\n      question: currentQuestion,\n      answer: selectedOption\n    }]);\n    const isCorrect = selectedOption === correctAnswer;\n    setOptionClicked(true);\n    setTimeout(() => {\n      if (isCorrect) {\n        setCorrectAnswers();\n      }\n      if (isLast) {\n        setCurrentQuestion();\n      } else {\n        setStartGame(false);\n        setShowResults(true);\n      }\n    }, 3000);\n  };\n  const shuffleAnswers = () => {\n    return answers.sort(() => Math.random() - 0.5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: shuffleAnswers().map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        listStyleType: 'none',\n        color: optionClicked && \"red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quiz-button\",\n        onClick: () => handleOptionClick(option),\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_s(AnswerOptions, \"O7UWFyUJaA/WUUGrSIIUUNhq6zM=\");\n_c = AnswerOptions;\nexport default AnswerOptions;\nvar _c;\n$RefreshReg$(_c, \"AnswerOptions\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AnswerOptions","setCorrectAnswers","setCurrentQuestion","currentQuestion","setUserAnswers","userAnswers","setStartGame","setShowResults","answers","correctAnswer","isLast","_s","optionClicked","setOptionClicked","handleOptionClick","selectedOption","question","answer","isCorrect","setTimeout","shuffleAnswers","sort","Math","random","children","map","option","index","style","listStyleType","color","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gino.kalyun/Desktop/Repos/Go-Quiz/ReactQuiz/my-app/src/Quiz/Game.jsx"],"sourcesContent":["import {useState} from \"react\";\nimport './QuizButton.css';\n\n\n\nconst AnswerOptions = \n\t({\n\t\tsetCorrectAnswers,\n\t\tsetCurrentQuestion,\n\t\tcurrentQuestion,\n\t\tsetUserAnswers,\n\t\tuserAnswers,\n\t\tsetStartGame,\n\t\tsetShowResults,\n\t\tanswers,\n\t\tcorrectAnswer,\n\t\tisLast\n\t}) =>\n{\n\tconst [optionClicked, setOptionClicked] = useState(false);\n\n\tconst handleOptionClick = (selectedOption) => {\n\t\tsetUserAnswers([...userAnswers, { question: currentQuestion, answer: selectedOption }]);\n\t\tconst isCorrect = selectedOption === correctAnswer;\n\n\t\tsetOptionClicked(true);\n\n\n\t\tsetTimeout(() => {\n\t\t\tif (isCorrect) {\n\t\t\t\tsetCorrectAnswers();\n\t\t\t}\t\n\t\t\t\n\t\t\tif (isLast) {\n\t\t\t\tsetCurrentQuestion();\n\t\t\t} else {\n\t\t\t\tsetStartGame(false);\n\t\t\t\tsetShowResults(true);\n\t\t\t}\n\n\t\t}, 3000)\n\t};\n\n\tconst shuffleAnswers = () => {\n\t\t\treturn answers.sort(()=> Math.random() - 0.5);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{shuffleAnswers().map((option, index) => (\n\t\t\t\t<li key={index} style={{ listStyleType: 'none', color: optionClicked && \"red\" }}>\n\t\t\t\t<button className=\"quiz-button\" onClick={() => handleOptionClick(option)}>\n\t\t\t\t\t{option}\n\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default AnswerOptions;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,aAAa,GAClBA,CAAC;EACAC,iBAAiB;EACjBC,kBAAkB;EAClBC,eAAe;EACfC,cAAc;EACdC,WAAW;EACXC,YAAY;EACZC,cAAc;EACdC,OAAO;EACPC,aAAa;EACbC;AACD,CAAC,KACF;EAAAC,EAAA;EACC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMiB,iBAAiB,GAAIC,cAAc,IAAK;IAC7CX,cAAc,CAAC,CAAC,GAAGC,WAAW,EAAE;MAAEW,QAAQ,EAAEb,eAAe;MAAEc,MAAM,EAAEF;IAAe,CAAC,CAAC,CAAC;IACvF,MAAMG,SAAS,GAAGH,cAAc,KAAKN,aAAa;IAElDI,gBAAgB,CAAC,IAAI,CAAC;IAGtBM,UAAU,CAAC,MAAM;MAChB,IAAID,SAAS,EAAE;QACdjB,iBAAiB,CAAC,CAAC;MACpB;MAEA,IAAIS,MAAM,EAAE;QACXR,kBAAkB,CAAC,CAAC;MACrB,CAAC,MAAM;QACNI,YAAY,CAAC,KAAK,CAAC;QACnBC,cAAc,CAAC,IAAI,CAAC;MACrB;IAED,CAAC,EAAE,IAAI,CAAC;EACT,CAAC;EAED,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOZ,OAAO,CAACa,IAAI,CAAC,MAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAC/C,CAAC;EAED,oBACCxB,OAAA;IAAAyB,QAAA,EACEJ,cAAc,CAAC,CAAC,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACnC5B,OAAA;MAAgB6B,KAAK,EAAE;QAAEC,aAAa,EAAE,MAAM;QAAEC,KAAK,EAAElB,aAAa,IAAI;MAAM,CAAE;MAAAY,QAAA,eAChFzB,OAAA;QAAQgC,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACY,MAAM,CAAE;QAAAF,QAAA,EACvEE;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC,GAHAT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAAzB,EAAA,CArDKX,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}