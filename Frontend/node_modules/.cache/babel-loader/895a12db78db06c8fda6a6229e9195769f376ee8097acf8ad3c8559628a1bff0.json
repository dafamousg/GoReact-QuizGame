{"ast":null,"code":"var _jsxFileName = \"/Users/gino.kalyun/Desktop/Repos/Go-Quiz/ReactQuiz/my-app/src/Quiz/Game.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Option from \"./Option\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerOptions = ({\n  setCorrectAnswers,\n  setCurrentQuestion,\n  currentQuestion,\n  setUserAnswers,\n  userAnswers,\n  setStartGame,\n  setShowResults,\n  answers,\n  correctAnswer,\n  isLast\n}) => {\n  _s();\n  const [optionClicked, setOptionClicked] = useState(false);\n  const isCorrectOption = op => op === correctAnswer;\n  const handleOptionClick = selectedOption => {\n    setUserAnswers([...userAnswers, {\n      question: currentQuestion,\n      answer: selectedOption\n    }]);\n    const isCorrect = selectedOption === correctAnswer;\n    setOptionClicked(true);\n    setTimeout(() => {\n      if (isCorrect) {\n        setCorrectAnswers();\n      }\n      if (isLast) {\n        setCurrentQuestion();\n      } else {\n        setStartGame(false);\n        setShowResults(true);\n      }\n      setOptionClicked(false);\n    }, 1000);\n  };\n  const shuffleAnswers = () => {\n    return answers.sort(() => Math.random() - 0.5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: shuffleAnswers().map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        listStyleType: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: optionClicked,\n        className: `quiz-button ${optionClicked ? isCorrectOption(option) ? \"correct\" : \"incorrect\" : \"\"}`,\n        onClick: () => handleOptionClick(),\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n_s(AnswerOptions, \"O7UWFyUJaA/WUUGrSIIUUNhq6zM=\");\n_c = AnswerOptions;\nexport default AnswerOptions;\nvar _c;\n$RefreshReg$(_c, \"AnswerOptions\");","map":{"version":3,"names":["useState","Option","jsxDEV","_jsxDEV","AnswerOptions","setCorrectAnswers","setCurrentQuestion","currentQuestion","setUserAnswers","userAnswers","setStartGame","setShowResults","answers","correctAnswer","isLast","_s","optionClicked","setOptionClicked","isCorrectOption","op","handleOptionClick","selectedOption","question","answer","isCorrect","setTimeout","shuffleAnswers","sort","Math","random","children","map","option","index","style","listStyleType","disabled","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gino.kalyun/Desktop/Repos/Go-Quiz/ReactQuiz/my-app/src/Quiz/Game.jsx"],"sourcesContent":["import {useState} from \"react\";\nimport Option from \"./Option\";\n\n\n\nconst AnswerOptions = \n\t({\n\t\tsetCorrectAnswers,\n\t\tsetCurrentQuestion,\n\t\tcurrentQuestion,\n\t\tsetUserAnswers,\n\t\tuserAnswers,\n\t\tsetStartGame,\n\t\tsetShowResults,\n\t\tanswers,\n\t\tcorrectAnswer,\n\t\tisLast\n\t}) =>\n{\n\n\tconst [optionClicked, setOptionClicked] = useState(false);\n\n\tconst isCorrectOption = (op) => op === correctAnswer; \n\n\tconst handleOptionClick = (selectedOption) => {\n\t\tsetUserAnswers([...userAnswers, { question: currentQuestion, answer: selectedOption }]);\n\t\tconst isCorrect = selectedOption === correctAnswer;\n\n\t\tsetOptionClicked(true);\n\t\n\t\n\t\tsetTimeout(() => {\n\n\t\t\tif (isCorrect) {\n\t\t\t\tsetCorrectAnswers();\n\t\t\t}\t\n\t\t\t\n\t\t\tif (isLast) {\n\t\t\t\tsetCurrentQuestion();\n\t\t\t} else {\n\t\t\t\tsetStartGame(false);\n\t\t\t\tsetShowResults(true);\n\t\t\t}\n\t\t\t\n\t\t\tsetOptionClicked(false);\n\t\t}, 1000)\n\n\t};\n\n\tconst shuffleAnswers = () => {\n\t\t\treturn answers.sort(()=> Math.random() - 0.5);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{shuffleAnswers().map((option, index) => (\n\t\t\t\t<li\n\t\t\t\tkey={index}\n\t\t\t\tstyle={{\n\t\t\t\t\tlistStyleType: 'none'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tdisabled={optionClicked}\n\t\t\t\t\tclassName={`quiz-button ${optionClicked ? isCorrectOption(option) ? \"correct\": \"incorrect\" : \"\"}` }\n\t\t\t\t\tonClick={() => handleOptionClick()}\n\t\t\t\t>\n\t\t\t\t\t\t{option}\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default AnswerOptions;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9B,MAAMC,aAAa,GAClBA,CAAC;EACAC,iBAAiB;EACjBC,kBAAkB;EAClBC,eAAe;EACfC,cAAc;EACdC,WAAW;EACXC,YAAY;EACZC,cAAc;EACdC,OAAO;EACPC,aAAa;EACbC;AACD,CAAC,KACF;EAAAC,EAAA;EAEC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMkB,eAAe,GAAIC,EAAE,IAAKA,EAAE,KAAKN,aAAa;EAEpD,MAAMO,iBAAiB,GAAIC,cAAc,IAAK;IAC7Cb,cAAc,CAAC,CAAC,GAAGC,WAAW,EAAE;MAAEa,QAAQ,EAAEf,eAAe;MAAEgB,MAAM,EAAEF;IAAe,CAAC,CAAC,CAAC;IACvF,MAAMG,SAAS,GAAGH,cAAc,KAAKR,aAAa;IAElDI,gBAAgB,CAAC,IAAI,CAAC;IAGtBQ,UAAU,CAAC,MAAM;MAEhB,IAAID,SAAS,EAAE;QACdnB,iBAAiB,CAAC,CAAC;MACpB;MAEA,IAAIS,MAAM,EAAE;QACXR,kBAAkB,CAAC,CAAC;MACrB,CAAC,MAAM;QACNI,YAAY,CAAC,KAAK,CAAC;QACnBC,cAAc,CAAC,IAAI,CAAC;MACrB;MAEAM,gBAAgB,CAAC,KAAK,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EAET,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOd,OAAO,CAACe,IAAI,CAAC,MAAKC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAC/C,CAAC;EAED,oBACC1B,OAAA;IAAA2B,QAAA,EACEJ,cAAc,CAAC,CAAC,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACnC9B,OAAA;MAEA+B,KAAK,EAAE;QACNC,aAAa,EAAE;MAChB,CAAE;MAAAL,QAAA,eAEF3B,OAAA;QACCiC,QAAQ,EAAEpB,aAAc;QACxBqB,SAAS,EAAG,eAAcrB,aAAa,GAAGE,eAAe,CAACc,MAAM,CAAC,GAAG,SAAS,GAAE,WAAW,GAAG,EAAG,EAAG;QACnGM,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAAC,CAAE;QAAAU,QAAA,EAEjCE;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC,GAXJT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYP,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAA3B,EAAA,CApEKX,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAsEnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}