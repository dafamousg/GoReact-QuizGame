{"ast":null,"code":"var _jsxFileName = \"/Users/gino.kalyun/Desktop/Repos/Go-Quiz/ReactQuiz/my-app/src/Quiz/Game.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport QuizButton from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  quizData\n}) => {\n  _s();\n  const [feedbackOptions, setFeedbackOptions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const answerFeedback = correct => {\n    console.log(\"Feedback\");\n    setFeedbackOptions([...feedbackOptions, {\n      question: currentQuestion,\n      correct\n    }]);\n    setTimeout(() => {\n      console.log(\"Change question\");\n      setCurrentQuestion(currentQuestion + 1);\n    }, 3000);\n  };\n  const handleOptionClick = selectedOption => {\n    setUserAnswers([...userAnswers, {\n      question: currentQuestion,\n      answer: selectedOption\n    }]);\n    const isCorrect = selectedOption === quizData[currentQuestion].correctAnswer;\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n    answerFeedback(isCorrect);\n    if (currentQuestion + 1 < quizData.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setStartGame(false);\n      setShowResults(true);\n    }\n  };\n  const shuffleAnswers = answers => {\n    return answers.sort(() => Math.random() - 0.5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: quizData[currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: shuffleAnswers(quizData[currentQuestion].possibleAnswers).map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          listStyleType: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(QuizButton, {\n          option: option,\n          onClick: () => handleOptionClick(option),\n          className: feedbackOptions.find(feedback => feedback.question === currentQuestion && feedback.correct) ? 'correct' : feedbackOptions.find(feedback => feedback.question === currentQuestion && !feedback.correct) ? 'incorrect' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${currentQuestion + 1} of ${quizData.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 4\n  }, this);\n};\n_s(Game, \"xNKybxm8IW6A7cxkFeg+8hDSLCo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","QuizButton","jsxDEV","_jsxDEV","Game","quizData","_s","feedbackOptions","setFeedbackOptions","currentQuestion","setCurrentQuestion","answerFeedback","correct","console","log","question","setTimeout","handleOptionClick","selectedOption","setUserAnswers","userAnswers","answer","isCorrect","correctAnswer","setCorrectAnswers","correctAnswers","length","setStartGame","setShowResults","shuffleAnswers","answers","sort","Math","random","children","fileName","_jsxFileName","lineNumber","columnNumber","possibleAnswers","map","option","index","style","listStyleType","onClick","className","find","feedback","_c","$RefreshReg$"],"sources":["/Users/gino.kalyun/Desktop/Repos/Go-Quiz/ReactQuiz/my-app/src/Quiz/Game.jsx"],"sourcesContent":["import {useState} from \"react\";\nimport QuizButton from \"./Button\";\n\n\nconst Game = ({quizData}) => {\n\n\n    const [feedbackOptions, setFeedbackOptions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n\n    const answerFeedback = (correct) => {\n        console.log(\"Feedback\");\n        setFeedbackOptions([...feedbackOptions, { question: currentQuestion, correct }]);\n        setTimeout(() => {\n          console.log(\"Change question\");\n          setCurrentQuestion(currentQuestion + 1);\n        }, 3000);\n      };\n\n    const handleOptionClick = (selectedOption) => {\n        setUserAnswers([...userAnswers, { question: currentQuestion, answer: selectedOption }]);\n        const isCorrect = selectedOption === quizData[currentQuestion].correctAnswer;\n\n        if (isCorrect) {\n            setCorrectAnswers(correctAnswers + 1);\n        }\n\n        answerFeedback(isCorrect);\n\n        if (currentQuestion + 1 < quizData.length) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            setStartGame(false);\n            setShowResults(true);\n        }\n    };\n\n    const shuffleAnswers = (answers) => {\n        return answers.sort(()=> Math.random() - 0.5);\n    }\n\n    return (\n\t\t\t<div>\n\t\t\t\t<h2>Quiz</h2>\n\t\t\t\t<p>{quizData[currentQuestion].question}</p>\n\t\t\t\t<ul>\n\t\t\t\t{shuffleAnswers(quizData[currentQuestion].possibleAnswers).map((option, index) => (\n\t\t\t\t\t<li key={index} style={{ listStyleType: 'none' }}>\n\t\t\t\t\t<QuizButton\n\t\t\t\t\t\toption={option}\n\t\t\t\t\t\tonClick={() => handleOptionClick(option)}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\tfeedbackOptions.find(\n\t\t\t\t\t\t\t(feedback) => feedback.question === currentQuestion && feedback.correct\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? 'correct'\n\t\t\t\t\t\t\t: feedbackOptions.find(\n\t\t\t\t\t\t\t\t\t(feedback) => feedback.question === currentQuestion && !feedback.correct\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? 'incorrect'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<p>{`${currentQuestion +1} of ${quizData.length}`}</p>\n\t\t\t</div>\n\t\t)\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}